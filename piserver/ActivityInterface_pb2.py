# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ActivityInterface.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ActivityInterface.proto',
  package='Esp8266Alert',
  syntax='proto2',
  serialized_pb=_b('\n\x17\x41\x63tivityInterface.proto\x12\x0c\x45sp8266Alert\"-\n\x13\x41lertThresholdCross\x12\x16\n\x0e\x63rossed_thresh\x18\x01 \x02(\x03')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ALERTTHRESHOLDCROSS = _descriptor.Descriptor(
  name='AlertThresholdCross',
  full_name='Esp8266Alert.AlertThresholdCross',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='crossed_thresh', full_name='Esp8266Alert.AlertThresholdCross.crossed_thresh', index=0,
      number=1, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=86,
)

DESCRIPTOR.message_types_by_name['AlertThresholdCross'] = _ALERTTHRESHOLDCROSS

AlertThresholdCross = _reflection.GeneratedProtocolMessageType('AlertThresholdCross', (_message.Message,), dict(
  DESCRIPTOR = _ALERTTHRESHOLDCROSS,
  __module__ = 'ActivityInterface_pb2'
  # @@protoc_insertion_point(class_scope:Esp8266Alert.AlertThresholdCross)
  ))
_sym_db.RegisterMessage(AlertThresholdCross)


# @@protoc_insertion_point(module_scope)
